from typing import Type
import requests
import json
import re
import csv
import pandas as pd

def col_type(result,row,col_name):
    # print(row,"🐔",results[row]["properties"][col_name]["type"])
    return result[row]["properties"][col_name]["type"]

def read_table(url_read,token,col_name=''):
    headers = {
        "Authorization": "Bearer {NOTION_KEY}".format(NOTION_KEY=token),
        "Content-Type": "application/json",
        "Notion-Version": "2021-08-16"
    }
    payload = {}
    r = requests.post(url_read,data=json.dumps(payload),headers=headers)
    projects = {}
    results = r.json()
 # 只取有效的行，有些空的没填完整的就跳过
    return results
    # print(projects,len(projects))

'''
def requst_hasura(url,pwd,query,variables):
    headers = {
    "content-type":"application/json",
    "x-hasura-admin-secret":pwd
    }
    payload = {
        "query": query,
        "variables":variables
    }
    r = requests.post(url,headers=headers,data=json.dumps(payload))  
    return r.json()


def set_variables(project_name,pool_ids,payload_variables_structure,start,end):
    # 设置 variable
    payload_variables_structure["start_time"] = start
    payload_variables_structure["end_time"] = end
    payload_variables_structure["pool_ids"] = pool_ids
    return payload_variables_structure

def get_result(projects_and_pool_ids_and_type,query,payload_variables_structure,to_file):
        results = {"项目名称":[],"数量":[],"项目类型":[],}
        for key,value in projects_and_pool_ids_and_type.items():
            payload_variables = set_variables(project_name=key, pool_ids=value[0], payload_variables_structure=payload_variables_structure,start=start_time,end=end_time)
            r = requst_hasura(url=url,pwd=pwd,query=query,variables=payload_variables)
            print(r)
            count = r["data"]['task_runs_aggregate']['aggregate']['count']
            type = value[1]
            results["项目名称"].append(key)
            results["项目类型"].append(type)
            results["数量"].append(count)
            # print(key,value,count,type)
        with pd.ExcelWriter(path=to_file, mode="w") as writer:
            pd.DataFrame(results).to_excel(writer)
'''

def retrieve_page(id,token):
    url = "https://api.notion.com/v1/pages/{}".format(id)
    print("⛔️",url)
    headers = {
        "Authorization": "Bearer {NOTION_KEY}".format(NOTION_KEY=token),
        "Notion-Version": "2021-08-16"
    }
    r = requests.get(url,headers=headers)
    results = r.json()
    return results
    # print(projects,len(projects))

def retrieve_user(id,token):
    url = "https://api.notion.com/v1/users/{}".format(id)
    print("⛔️",url)
    headers = {
        "Authorization": "Bearer {NOTION_KEY}".format(NOTION_KEY=token),
        "Notion-Version": "2021-08-16"
    }
    r = requests.get(url,headers=headers)
    results = r.json()
    return results
    # print(projects,len(projects))

def retrieve_block(id,token):
    url = "https://api.notion.com/v1/blocks/{}".format(id)
    print("⛔️",url)
    headers = {
        "Authorization": "Bearer {NOTION_KEY}".format(NOTION_KEY=token),
        "Notion-Version": "2021-08-16"
    }
    r = requests.get(url,headers=headers)
    results = r.json()
    return results
    # print(projects,len(projects))

def retrieve_databases(id,token):
    url = "https://api.notion.com/v1/databases/{}".format(id)
    print("⛔️",url)
    headers = {
        "Authorization": "Bearer {NOTION_KEY}".format(NOTION_KEY=token),
        "Notion-Version": "2021-08-16"
    }
    r = requests.get(url,headers=headers)
    results = r.json()
    return results
    # print(projects,len(projects))

if __name__ == "__main__":
    start_time =  "2021-10-08 17:00:00"
    end_time =  "2021-10-09 17:00:00"
    file = "/Users/lizhe/Desktop/shangqi-hasura.json"   # 存放url、pwd和token的json
    with open(file,'r') as f:
        obj = json.load(f)
        url = obj["url"]
        pwd = obj["x-hasura-admin-secret"]
        token = obj["token"]
    target_table_url = "https://api.notion.com/v1/databases/3d40984aec444edaa74d1d2dbc4402b8/query"
    to = "/Users/lizhe/Desktop/shangqi-{type}-{start}-{end}.xls"
    result = read_table(target_table_url,token=token)
    with open('read_from_table.json','w') as f:
        f.write(json.dumps(result))
    id = '52005145a5e54f77a0352ab9428363da'
    
    print(retrieve_page(id,token))
    print(retrieve_user(id,token))
    print(retrieve_block(id,token))
    print(retrieve_databases(id,token))
